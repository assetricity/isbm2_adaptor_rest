=begin
#ws-ISBM

#A prototype OpenAPI specification for the ws-ISBM RESTful interface.

OpenAPI spec version: 0.0.3
Contact: info@mimosa.org
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.0-beta2

=end

require 'spec_helper'
require 'json'

# Unit tests for ISBMRestAdaptor::ConsumerRequestServiceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ConsumerRequestServiceApi' do
  before do
    # run before each test
    @instance = ISBMRestAdaptor::ConsumerRequestServiceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConsumerRequestServiceApi' do
    it 'should create an instance of ConsumerRequestServiceApi' do
      expect(@instance).to be_instance_of(ISBMRestAdaptor::ConsumerRequestServiceApi)
    end
  end

  # unit tests for close_session
  # Closes a session.
  # Closes a session of any type. **Note** this diverges from the SOAP API in that it provides a single path for sessions of all types. The type of session is still known upon creation and the different operations can still only be performed on sessions of the correct type. All unexpired messages that have been posted during the session will be expired.
  # @param session_id The identifier of the session to be accessed (retrieved, deleted, modified, etc.)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'close_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for expire_request
  # Expires a posted request message.
  # @param session_id The identifier of the session to which the request message was posted.
  # @param message_id The identifier of the posted request.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'expire_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for open_consumer_request_session
  # Opens a consumer request session for a channel for posting requests and reading responses.
  # @param channel_id The identifier of the channel to be accessed (retrieved, deleted, modified, etc.)
  # @param [Hash] opts the optional parameters
  # @option opts [Session] :session The configuration of the consumer request session, i.e., optional notication listener address
  # @return [Session]
  describe 'open_consumer_request_session test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_request
  # Posts a request message on a channel.
  # @param session_id The identifier of the session to which the message will/is posted.
  # @param topic The Topic to which the message will be posted.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expiry The duration after which the message will be automatically expired. Negative duration is no duration.
  # @option opts [Hash<String, Object>] :request_body The Message. All ISBM service providers MUST support JSON and XML content types. ISBM service providers MAY support arbitrary content types.
  # @return [Message]
  describe 'post_request test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for read_response
  # Returns the first response message, if any, in the session message queue associated with the request.
  # @param session_id The identifier of the session at which the response message was recieved.
  # @param request_id The identifier of the origianal request for the response.
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Object>]
  describe 'read_response test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_response
  # Deletes the first response message, if any, in the session message queue associated with the request.
  # @param session_id The identifier of the session at which the response message was recieved.
  # @param request_id The identifier of the origianal request for the response.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_response test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

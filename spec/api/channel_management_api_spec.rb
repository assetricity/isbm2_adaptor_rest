=begin
#ws-ISBM

#A prototype OpenAPI specification for the ws-ISBM RESTful interface.

OpenAPI spec version: 0.0.1
Contact: info@mimosa.org
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.0-beta2

=end

require 'spec_helper'
require 'json'

# Unit tests for IsbmRestAdaptor::ChannelManagementApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ChannelManagementApi' do
  before do
    # run before each test
    @instance = IsbmRestAdaptor::ChannelManagementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChannelManagementApi' do
    it 'should create an instance of ChannelManagementApi' do
      expect(@instance).to be_instance_of(IsbmRestAdaptor::ChannelManagementApi)
    end
  end

  # unit tests for add_security_tokens
  # Adds security tokens to a channel.
  # @param channel_id The identifier of the channel to be accessed (retrieved, deleted, modified, etc.)
  # @param [Hash] opts the optional parameters
  # @option opts [Array<SecurityToken>] :security_token The SecurityTokens to add.
  # @return [nil]
  describe 'add_security_tokens test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_channel
  # Create a new channel with the specified URI path fragment.
  # @param [Hash] opts the optional parameters
  # @option opts [Channel] :channel The Channel to create on the bus
  # @return [Channel]
  describe 'create_channel test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_channel
  # Delete the Channel specified by &#39;channel-id&#39;
  # @param channel_id The identifier of the channel to be accessed (retrieved, deleted, modified, etc.)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_channel test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channel
  # Retreieve the Channel identified by &#39;channel-id&#39;
  # @param channel_id The identifier of the channel to be accessed (retrieved, deleted, modified, etc.)
  # @param [Hash] opts the optional parameters
  # @return [Channel]
  describe 'get_channel test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_channels
  # Retrieve all the channels, subject to security permissions.
  # @param [Hash] opts the optional parameters
  # @return [Array<Channel>]
  describe 'get_channels test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_security_tokens
  # Removes security tokens from a channel.
  # @param channel_id The identifier of the channel to be accessed (retrieved, deleted, modified, etc.)
  # @param [Hash] opts the optional parameters
  # @option opts [Array<SecurityToken>] :security_token The security tokens to remove: the tokens must be specified in full to be removed.
  # @return [nil]
  describe 'remove_security_tokens test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
